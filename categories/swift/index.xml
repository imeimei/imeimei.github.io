<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swift on Keep It Simple</title>
    <link>https://halohui.github.io/categories/swift/</link>
    <description>Recent content in Swift on Keep It Simple</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 09 Jan 2019 09:18:25 +0000</lastBuildDate>
    
	<atom:link href="https://halohui.github.io/categories/swift/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Swift访问权限</title>
      <link>https://halohui.github.io/post/swift-access-control/</link>
      <pubDate>Wed, 09 Jan 2019 09:18:25 +0000</pubDate>
      
      <guid>https://halohui.github.io/post/swift-access-control/</guid>
      <description>访问权限用于限制部分代码被其它源文件或者模块访问，目的是隐藏某些代码的实现细节。在Swift中可以设置类型(类、结构和枚举)的访问权限，也可</description>
    </item>
    
    <item>
      <title>Swift中for-in的各种姿势</title>
      <link>https://halohui.github.io/post/swift-for-in/</link>
      <pubDate>Fri, 04 Jan 2019 08:16:45 +0000</pubDate>
      
      <guid>https://halohui.github.io/post/swift-for-in/</guid>
      <description>Swift中只有一种形式的for循环，即for-in。但是for-in有多种形式，包括常规用法和区间循环。 常规用法 常规用法一般用于直接访问数</description>
    </item>
    
    <item>
      <title>swift中的方法</title>
      <link>https://halohui.github.io/post/swift-method/</link>
      <pubDate>Fri, 14 Sep 2018 09:31:40 +0000</pubDate>
      
      <guid>https://halohui.github.io/post/swift-method/</guid>
      <description>方法是关联了特定类型的函数。类，结构体，枚举类型都能定义实例方法，方法封装了给定类型特定的任务和功能。 实例方法 实例方法是属于特定实例（结构体</description>
    </item>
    
  </channel>
</rss>